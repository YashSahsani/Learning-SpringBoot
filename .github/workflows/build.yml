name: CI/CD Pipeline with DevSecOps

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

jobs:
  # Build and Test
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'temurin'
    
    - name: Build and Test with Maven
      run: |
        mvn clean install
        mvn test
    
    - name: Create JAR File
      run: mvn clean package

  # Static Code Analysis
  static_code_analysis:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run Static Code Analysis with SonarCloud
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=Learning-SpringBoot
          -Dsonar.organization=YashSahsani
          -Dsonar.sources=.
          -Dsonar.java.binaries=target/

  # Security Scanning
  security_scanning:
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Snyk Dependency Scan
      uses: snyk/actions/setup@master
    - name: Run Snyk Test
      run: snyk test --all-projects --severity-threshold=high
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Monitor the project on Snyk
      run: snyk monitor --all-projects
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: Scan for Vulnerable Dependencies with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true

  # Docker Image Build and Scan
  docker_build_and_scan:
    runs-on: ubuntu-latest
    needs: [build_and_test, security_scanning]
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Hub Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-learning:${{ github.sha }} .
    
    - name: Snyk Docker Image Scan
      uses: snyk/actions/docker@master
      with:
        image: ${{ secrets.DOCKER_USERNAME }}/spring-learning:${{ github.sha }}
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: Scan Docker Image with Trivy
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ secrets.DOCKER_USERNAME }}/spring-learning:${{ github.sha }}
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true

    - name: Push Docker Image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-learning:${{ github.sha }}
